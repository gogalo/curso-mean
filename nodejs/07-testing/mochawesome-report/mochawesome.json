{
  "stats": {
    "suites": 2,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2019-03-27T19:26:09.731Z",
    "end": "2019-03-27T19:26:11.041Z",
    "duration": 1310,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "0447bcf6-0e18-460d-b44a-b04a567df9b9",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "8011015f-ec36-438b-ae82-5b415b0a6871",
        "title": "Página principal: ",
        "fullFile": "/home/alumno/mean/nodejs/07-testing/test/00_principal.js",
        "file": "/test/00_principal.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "GET / Devuelve un código 200",
            "fullTitle": "Página principal:  GET / Devuelve un código 200",
            "timedOut": false,
            "duration": 1171,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(mainURL)\n.get('/')\n.end( function(err,res){\n    expect(res).to.have.status(200);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "a3cf57bd-c8bd-4d17-9fd5-d2c5f98c406f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "GET / Devuelve HTML concreto",
            "fullTitle": "Página principal:  GET / Devuelve HTML concreto",
            "timedOut": false,
            "duration": 26,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(mainURL)\n.get('/')\n.end( function(err,res){\n    expect(res.text).equals('<!DOCTYPE html><html><head><title>Express</title><link rel=\"stylesheet\" href=\"/stylesheets/style.css\"></head><body><h1>Express</h1><p>Welcome to Express</p></body></html>');\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "9a343625-df14-4301-8a3c-c17e1c6a2107",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "a3cf57bd-c8bd-4d17-9fd5-d2c5f98c406f",
          "9a343625-df14-4301-8a3c-c17e1c6a2107"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1197,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "f2f13e58-43e2-4537-aa1c-3913e8fa6acc",
        "title": "Api RestFul - libros: ",
        "fullFile": "/home/alumno/mean/nodejs/07-testing/test/01_api_rest_libros.js",
        "file": "/test/01_api_rest_libros.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "GET / Devuelve listado de libros",
            "fullTitle": "Api RestFul - libros:  GET / Devuelve listado de libros",
            "timedOut": false,
            "duration": 24,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(mainURL)\n.get('/libros')\n.end( function(err,res){\n    // tenemos un codigo de respuesta 200\n    expect(res).to.have.status(200);\n    // devuelve un objeto\n    expect(res.body).to.be.an('Object');\n    \n    // success\n    var success = res.body.success;\n    expect(success).to.equal(true);\n    \n    // data\n    var data = res.body.data;\n    expect(data).to.be.an('Array');\n    for (let obj of data) {\n        //console.log(p);\n        expect(obj).to.be.an('Object');\n        expect(obj._id).to.be.an(\"String\");\n        expect(obj.isbn).to.be.an(\"String\");\n        expect(obj.name).to.be.an(\"String\");\n        expect(obj.author).to.be.an(\"String\");\n        expect(obj.__v).to.be.an(\"Number\");\n    }\n    \n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "24b36fa2-c21a-41ff-aa3c-e0fbb2a0d34b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "POST / Nuevo libro",
            "fullTitle": "Api RestFul - libros:  POST / Nuevo libro",
            "timedOut": false,
            "duration": 61,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(mainURL)\n.post('/libros')\n.send({\n    isbn: \"1234567890ABC\",\n    name: \"Node.js: Related Tools & Skills\",\n    author: \"Craig Buckler; Jani Hartikainen; M. David Green; Olayinka Omole;\"\n})\n.end( function(err,res){\n    // tenemos un codigo de respuesta 200\n    expect(res).to.have.status(200);\n    // devuelve un objeto\n    expect(res.body).to.be.an('Object');\n    \n    // success\n    var success = res.body.success;\n    expect(success).to.equal(true);\n    \n    // data\n    libro = res.body.data;\n    expect(libro).to.be.an('Object');\n    \n    expect(libro._id).to.be.an(\"String\");\n    \n    expect(libro.isbn).to.be.an(\"String\");\n    expect(libro.isbn).equal(\"1234567890ABC\");\n    \n    expect(libro.name).to.be.an(\"String\");\n    expect(libro.name).equal(\"Node.js: Related Tools & Skills\");\n    \n    expect(libro.author).to.be.an(\"String\");\n    expect(libro.author).equal(\"Craig Buckler; Jani Hartikainen; M. David Green; Olayinka Omole;\");\n    \n    expect(libro.__v).to.be.an(\"Number\");\n    expect(libro.__v).equal(0);\n    \n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "84565bb8-ac06-428e-95d7-f3f20f09f65f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "DELETE /:isbn Borrar libro",
            "fullTitle": "Api RestFul - libros:  DELETE /:isbn Borrar libro",
            "timedOut": false,
            "duration": 20,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(mainURL)\n.delete('/libros/' + libro.isbn)\n.end( function(err,res){\n    // tenemos un codigo de respuesta 200\n    expect(res).to.have.status(200);\n    // devuelve un objeto\n    expect(res.body).to.be.an('Object');\n    \n    // success\n    var success = res.body.success;\n    expect(success).to.equal(true);\n    // data\n    var l = res.body.data;\n    expect(l).to.be.an('Object');\n    \n    expect(l._id).to.be.an(\"String\");\n    expect(l._id).equal(libro._id);\n    \n    expect(l.isbn).to.be.an(\"String\");\n    expect(l.isbn).equal(libro.isbn);\n    \n    expect(l.name).to.be.an(\"String\");\n    expect(l.name).equal(libro.name);\n    \n    expect(l.author).to.be.an(\"String\");\n    expect(l.author).equal(libro.author);\n    \n    expect(libro.__v).to.be.an(\"Number\");\n    expect(libro.__v).equal(libro.__v);\n    \n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "6b7f52bd-d0f2-471b-afcc-822e0e372b8e",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "24b36fa2-c21a-41ff-aa3c-e0fbb2a0d34b",
          "84565bb8-ac06-428e-95d7-f3f20f09f65f",
          "6b7f52bd-d0f2-471b-afcc-822e0e372b8e"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 105,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}